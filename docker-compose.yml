version: "3.5"
services:
#    identity-setup:
#        image: um-identity-setup
#        container_name: um-identity-setup
#        networks:
#            - eoepca_network
#        environment:
#            - IDENTITY_AUTH_SERVER_URL=http://keycloak:8080
#            - IDENTITY_RESOURCE_SERVER_ENDPOINT=http://keycloak-springboot-demo:7070
#        restart: on-failure
#    identity-manager:
#        image: um-identity-manager
#        container_name: um-identity-manager
#        networks:
#            - eoepca_network
#        ports:
#            - '4200:4200'
#        restart: on-failure
    identity-api:
        image: um-identity-api
        container_name: um-identity-api
        networks:
            - eoepca_network
        ports:
            - '5566:5566'
        environment:
            - AUTH_SERVER_URL=http://keycloak:8080/
            - ADMIN_PASSWORD=admin
            - REALM=master
            - RESOURCE_SERVER_ENDPOINT=http://spring-boot-oauth2-resource-server:7071
        restart: on-failure
    keycloak:
        image: quay.io/keycloak/keycloak:22.0.3
        container_name: keycloak
        networks:
            - eoepca_network
        ports:
            - "8080:8080"
        environment:
            - KEYCLOAK_LOGLEVEL=DEBUG
            - WILDFLY_LOGLEVEL=DEBUG
            - KEYCLOAK_ADMIN=admin
            - KEYCLOAK_ADMIN_PASSWORD=admin
            - KC_PROXY=edge
            - KC_LOGLEVEL=WARN
            - PROXY_ADDRESS_FORWARDING=true
            - KC_HOSTNAME_STRICT=false
            - KC_DB=postgres
            - KC_DB_URL_HOST=postgres
            - KC_DB_PASSWORD=123456
            - KC_DB_USERNAME=keycloak
            - KC_DB_URL_PORT=5432
        entrypoint: /opt/keycloak/bin/kc.sh start
        volumes:
            - ./keycloak/health-check.sh:/opt/keycloak/health-check.sh
        restart: on-failure
        healthcheck:
            test: "bash /opt/keycloak/health-check.sh"
            interval: 5s
            timeout: 180s
            retries: 36
    postgres:
        image: postgres:16.0
        container_name: postgres
        networks:
            - eoepca_network
        ports:
            - '5432:5432'
        volumes:
            - ./postgres/data:/var/lib/postgresql/data
        environment:
            - POSTGRES_DB=keycloak
            - POSTGRES_USER=keycloak
            - POSTGRES_PASSWORD=123456
            - PGPASSWORD=123
            - PGDATA=/var/lib/postgresql/data/keycloak
        restart: on-failure
    gatekeeper:
        image: quay.io/gogatekeeper/gatekeeper:2.8.0
        container_name: gatekeeper
        networks:
            - eoepca_network
        ports:
            - '3000:3000'
        restart: on-failure
        volumes:
            - ./gatekeeper.yml:/gatekeeper/config.yml/:ro
        environment:
            - PROXY_CONFIG_FILE=/gatekeeper/config.yml
        #depends_on:
        #    keycloak:
        #        condition: service_healthy
    resource-server:
        build: demos/spring-boot-oauth2-resource-server
        container_name: spring-boot-oauth2-resource-server
        networks:
            - eoepca_network
        ports:
            - '7072:7072'
networks:
    eoepca_network:
        driver: bridge
        name: eoepca_network
