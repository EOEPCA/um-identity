version: "3.5"
services:
#    identity-setup:
#        image: um-identity-setup
#        container_name: um-identity-setup
#        networks:
#            - eoepca_network
#        environment:
#            - IDENTITY_AUTH_SERVER_URL=http://keycloak:8080
#            - IDENTITY_RESOURCE_SERVER_ENDPOINT=http://keycloak-springboot-demo:7070
#        restart: on-failure
#    identity-manager:
#        image: um-identity-manager
#        container_name: um-identity-manager
#        networks:
#            - eoepca_network
#        ports:
#            - '4200:4200'
#        restart: on-failure
#    identity-api:
#        image: um-identity-api
#        container_name: um-identity-api
#        networks:
#            - eoepca_network
#        ports:
#            - '5566:5566'
#        environment:
#            - IDENTITY_AUTH_SERVER_URL=http://keycloak:8080
#            - IDENTITY_RESOURCE_SERVER_ENDPOINT=http://keycloak-springboot-demo:7070
#        restart: on-failure
    keycloak:
        image: quay.io/keycloak/keycloak:22.0
        container_name: keycloak
        networks:
            - eoepca_network
        ports:
            - "8080:8080"
        environment:
            - KEYCLOAK_LOGLEVEL=DEBUG
            - WILDFLY_LOGLEVEL=DEBUG
            - KEYCLOAK_ADMIN=admin
            - KEYCLOAK_ADMIN_PASSWORD=admin
            - KC_PROXY=edge
            - KC_HTTP_RELATIVE_PATH=/auth
            - KC_LOGLEVEL=WARN
            - PROXY_ADDRESS_FORWARDING=true
            - KC_HOSTNAME_STRICT=false
            - KC_DB=postgres
            - KC_DB_URL_HOST=postgres
            - KC_DB_PASSWORD=123456
            - KC_DB_USERNAME=keycloak
            - KC_DB_URL_PORT=5432
        entrypoint: /opt/keycloak/bin/kc.sh start
        volumes:
            - ./keycloak/health-check.sh:/opt/keycloak/health-check.sh
        restart: on-failure
        healthcheck:
            test: "bash /opt/keycloak/health-check.sh"
            interval: 5s
            timeout: 180s
            retries: 36
    postgres:
        image: postgres:12.10
        container_name: postgres
        networks:
            - eoepca_network
        ports:
            - '5432:5432'
        volumes:
            - ./postgres/data:/var/lib/postgresql/data
        environment:
            - POSTGRES_DB=keycloak
            - POSTGRES_USER=keycloak
            - POSTGRES_PASSWORD=123456
            - PGPASSWORD=123
            - PGDATA=/var/lib/postgresql/data/keycloak
        restart: on-failure
    oauth2-proxy:
        image: quay.io/oauth2-proxy/oauth2-proxy:v7.4.0
        container_name: oauth2-proxy
        networks:
            - eoepca_network
        ports:
            - '4180:4180'
        depends_on:
            - keycloak
        healthcheck:
            test: [ "CMD", "curl", "-k", "-f", "http://oauth2-proxy:4180" ]
            interval: 10s
            timeout: 1s
            retries: 15
        restart: on-failure
        environment:
            - OAUTH2_PROXY_HTTP_ADDRESS=0.0.0.0:4180
            - OAUTH2_PROXY_COOKIE_SECURE=false
            - OAUTH2_PROXY_COOKIE_SECRET=JxJZrvNo4z1VJIiDMDGJe3q4TjmpVxMNHziW97J9UAo=
            - OAUTH2_PROXY_COOKIE_CSRF_PER_REQUEST=true
            - OAUTH2_PROXY_COOKIE_CSRF_EXPIRE=5m
            #- OAUTH2_PROXY_UPSTREAMS=http://keycloak-springboot-demo:7070
            #- OAUTH2_PROXY_UPSTREAMS=https://dummy-service.develop.eoepca.org
            - OAUTH2_PROXY_UPSTREAMS=http://open-springboot-demo:7071
            - OAUTH2_PROXY_COOKIE_DOMAINS=oauth2-proxy,oauth2-proxy:4180 # Required so cookie can be read on all subdomains.
            - OAUTH2_PROXY_WHITELIST_DOMAINS=oauth2-proxy,oauth2-proxy:4180 # Required to allow redirection back to original requested target.
            - OAUTH2_PROXY_PASS_ACCESS_TOKEN=true
            - OAUTH2_PROXY_SET_XAUTHREQUEST=true
            # allow accounts to sign-in with empty emails
            # https://github.com/oauth2-proxy/oauth2-proxy/issues/769#issuecomment-808916298
            - OAUTH2_PROXY_EMAIL_DOMAINS=*
            - OAUTH2_PROXY_INSECURE_OIDC_ALLOW_UNVERIFIED_EMAIL=true
            - OAUTH2_PROXY_OIDC_EMAIL_CLAIM=sub
            # keycloak provider
            - OAUTH2_PROXY_CLIENT_ID=dummy-service
            - OAUTH2_PROXY_CLIENT_SECRET=HDAJ80c8oGrRIVSHUbLSk9d2ATOJ9IzY
            - OAUTH2_PROXY_REDIRECT_URL=http://oauth2-proxy:4180/oauth2/callback
            - OAUTH2_PROXY_OIDC_ISSUER_URL=http://keycloak:8080/auth/realms/demo
            #- OAUTH2_PROXY_REDEEM_URL=http://keycloak:8080/realms/demo/protocol/openid-connect/token
            #- OAUTH2_PROXY_OIDC_JWKS_URL=http://keycloak:8080/realms/demo/protocol/openid-connect/certs
            #- OAUTH2_PROXY_LOGIN_URL=http://keycloak:8080/realms/demo/protocol/openid-connect/auth
            # skip oidc discovery to supply urls with 'localhost' instead of 'keycloak'
            #- OAUTH2_PROXY_SKIP_OIDC_DISCOVERY=false
            - OAUTH2_PROXY_PROVIDER=oidc
            - OAUTH2_PROXY_PROVIDER_DISPLAY_NAME=Keycloak
            - OAUTH2_PROXY_SKIP_PROVIDER_BUTTON=true
            - OAUTH2_PROXY_SKIP_JWT_BEARER_TOKENS=true
            - OAUTH2_PROXY_PASS_AUTHORIZATION_HEADER=true
            - OAUTH2_PROXY_SET_AUTHORIZATION_HEADER=true
    nginx:
        image: nginx:1.25.1-alpine
        container_name: nginx
        networks:
            - eoepca_network
        depends_on:
            - oauth2-proxy
            - keycloak
        volumes:
            - ./nginx/default.conf:/etc/nginx/templates/default.conf.template
            #- ./nginx/letsencrypt:/etc/nginx/cert
            - ./nginx/www:/data/www
        ports:
            - "8081:8080"
        restart: on-failure
    demo-protected:
        image: keycloak-springboot-demo
        container_name: keycloak-springboot-demo
        networks:
            - eoepca_network
        ports:
            - "7070:7070"
        #restart: on-failure
    demo-open:
        image: open-springboot-demo
        container_name: open-springboot-demo
        networks:
            - eoepca_network
        ports:
            - "7071:7071"
        #restart: on-failure
#    demo-protected-security:
#        image: keycloak-spring-security
#        container_name: keycloak-spring-security
#        networks:
#            - eoepca_network
#        ports:
#            - "7072:7072"
#        #restart: on-failure
networks:
    eoepca_network:
        driver: bridge
        name: eoepcanetwork
