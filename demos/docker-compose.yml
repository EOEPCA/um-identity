version: "3.8"

services:
  open-echo:
    build: spring-boot-echo
    container_name: spring-boot-echo
    ports:
      - '7070:7070'
    networks:
      - eoepca_network
  oauth2-client:
    build: spring-boot-oauth2-client
    container_name: spring-boot-oauth2-client
    ports:
      - '7071:7071'
    restart: on-failure
    networks:
      - eoepca_network
  oauth2-resource-server:
    build: spring-boot-oauth2-resource-server
    container_name: spring-boot-oauth2-resource-server
    ports:
      - '7072:7072'
    networks:
      - eoepca_network
  keycloak:
    image: quay.io/keycloak/keycloak:22.0.5
    container_name: keycloak
    restart: on-failure
    ports:
      - '8080:8080'
    environment:
      - KEYCLOAK_LOGLEVEL=${KEYCLOAK_LOGLEVEL}
      - WILDFLY_LOGLEVEL=${WILDFLY_LOGLEVEL}
      - KEYCLOAK_ADMIN=${KEYCLOAK_ADMIN}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
      - KC_DB_URL_HOST=${KC_DB_URL_HOST}
      - KC_DB=${KC_DB}
      - KC_DB_USERNAME=${KC_DB_USERNAME}
      - KC_DB_PASSWORD=${KC_DB_PASSWORD}
      - KC_DB_URL_PORT=${KC_DB_URL_PORT}
      - KC_HEALTH_ENABLED=${KC_HEALTH_ENABLED}
      - KC_FEATURES=${KC_FEATURES}
    entrypoint: /opt/keycloak/bin/kc.sh start-dev --import-realm
    volumes:
      - ./realm-demo.json:/opt/keycloak/data/import/realm-demo.json
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - eoepca_network
  postgres:
    image: postgres:16.0
    container_name: postgres
    ports:
      - '5432:5432'
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=keycloak
      - POSTGRES_USER=keycloak
      - PGUSER=keycloak
      - POSTGRES_PASSWORD=123456
      - PGPASSWORD=123
      - PGDATA=/var/lib/postgresql/data/keycloak
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d keycloak -U keycloak"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - eoepca_network
  echo-gatekeeper:
    image: quay.io/gogatekeeper/gatekeeper:2.8.1
    container_name: echo-gatekeeper
    ports:
      - '3000:3000'
    restart: on-failure
    volumes:
      - ./gatekeeper-echo.yml:/gatekeeper/config.yml/:ro
    environment:
      - PROXY_CONFIG_FILE=/gatekeeper/config.yml
    networks:
      - eoepca_network
  resource-server-gatekeeper:
    image: quay.io/gogatekeeper/gatekeeper:2.8.0
    container_name: resource-server-gatekeeper
    ports:
      - '3001:3001'
    restart: on-failure
    volumes:
      - ./gatekeeper-resource-server.yml:/gatekeeper/config.yml/:ro
    environment:
      - PROXY_CONFIG_FILE=/gatekeeper/config.yml
    networks:
      - eoepca_network
  nginx:
    image: nginx:alpine
    container_name: nginx
    volumes:
      - ./nginx_proxy.conf:/etc/nginx/conf.d/default.conf
      #- ./nginx_auth_req.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:80"
    networks:
      - eoepca_network

volumes:
  cache:
    driver: local

networks:
  eoepca_network:
    driver: bridge
    name: eoepca_network