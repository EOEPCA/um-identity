version: "3.7"

services:
    web-app:
        build: .
        container_name: web-app
    keycloak:
        image: quay.io/keycloak/keycloak:22.0
        container_name: keycloak
        restart: on-failure
        ports:
            - '8080:8080'
        environment:
            - KEYCLOAK_LOGLEVEL=DEBUG
            - WILDFLY_LOGLEVEL=DEBUG
            - KEYCLOAK_ADMIN=admin
            - KEYCLOAK_ADMIN_PASSWORD=admin
            - KC_DB_URL_HOST=postgres
            - KC_DB=postgres
            - KC_DB_USERNAME=keycloak
            - KC_DB_PASSWORD=123456
            - KC_DB_URL_PORT=5432
        entrypoint: /opt/keycloak/bin/kc.sh start-dev
        depends_on:
            postgres:
                condition: service_healthy
    postgres:
        image: postgres:12.10
        container_name: postgres
        ports:
            - '5432:5432'
        volumes:
            - ./postgres/data:/var/lib/postgresql/data
        environment:
            - POSTGRES_DB=keycloak
            - POSTGRES_USER=keycloak
            - PGUSER=keycloak
            - POSTGRES_PASSWORD=123456
            - PGPASSWORD=123
            - PGDATA=/var/lib/postgresql/data/keycloak
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -d keycloak -U keycloak"]
            interval: 10s
            timeout: 5s
            retries: 5
    oauth2-proxy:
        image: quay.io/oauth2-proxy/oauth2-proxy:v7.4.0
        container_name: oauth2-proxy
        depends_on:
            - redis
            - keycloak
        restart: on-failure
        command:
            - --http-address
            - 0.0.0.0:4180
        environment:
            OAUTH2_PROXY_EMAIL_DOMAINS: '*'
            OAUTH2_PROXY_PROVIDER: oidc
            OAUTH2_PROXY_PROVIDER_DISPLAY_NAME: Keycloak
            OAUTH2_PROXY_SKIP_PROVIDER_BUTTON: true
            OAUTH2_PROXY_REDIRECT_URL: http://localhost/oauth2/callback

            OAUTH2_PROXY_OIDC_ISSUER_URL: ${ISSUER}
            OAUTH2_PROXY_CLIENT_ID: ${CLIENT_ID}
            OAUTH2_PROXY_CLIENT_SECRET: ${CLIENT_SECRET}

            OAUTH2_PROXY_SKIP_JWT_BEARER_TOKENS: true
            OAUTH2_PROXY_OIDC_EXTRA_AUDIENCES: api://default
            OAUTH2_PROXY_OIDC_EMAIL_CLAIM: sub

            OAUTH2_PROXY_SET_XAUTHREQUEST: true
            OAUTH2_PROXY_PASS_ACCESS_TOKEN: true

            OAUTH2_PROXY_SESSION_STORE_TYPE: redis
            OAUTH2_PROXY_REDIS_CONNECTION_URL: redis://redis

            OAUTH2_PROXY_COOKIE_REFRESH: 30m
            OAUTH2_PROXY_COOKIE_NAME: SESSION
            OAUTH2_PROXY_COOKIE_SECRET: ${OAUTH2_PROXY_COOKIE_SECRET}
    nginx:
        image: nginx:1.21.6-alpine
        container_name: nginx
        depends_on:
            - oauth2-proxy
            - web-app
        volumes:
            - ./nginx-default.conf.template:/etc/nginx/templates/default.conf.template
            - ./static-html:/usr/share/nginx/html
        ports:
            - "80:80"
    redis:
        image: redis:7.0.2-alpine3.16
        container_name: redis
        volumes:
            - cache:/data

volumes:
    cache:
        driver: local
