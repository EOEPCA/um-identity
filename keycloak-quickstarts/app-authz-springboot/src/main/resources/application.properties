server.connection-timeout=5000
spring.freemarker.cache=false
server.port=7070
keycloak.realm=demo
keycloak.auth-server-url=http://keycloak:8080/auth
keycloak.ssl-required=none
keycloak.resource=resources-management
keycloak.public-client=false
keycloak.credentials.secret=secret
keycloak.securityConstraints[0].authRoles[0]=user
keycloak.securityConstraints[0].securityCollections[0].name=protected
keycloak.securityConstraints[0].securityCollections[0].patterns[0]=/*

# This configuration enables the policy enforcer in order to protect resources served by this application.
# During the boot, the policy enforcer is going to fetch all protected resources in Keycloak and automatically configure your application.
# Note that protected resources in Keycloak are defined with a URI which maps to a set of resources in this application.
keycloak.policy-enforcer-config.on-deny-redirect-to=/accessDenied
keycloak.policy-enforcer-config.paths[0].name=Default Resource
keycloak.policy-enforcer-config.paths[0].path=/*
keycloak.policy-enforcer-config.paths[1].name=Protected Resource
keycloak.policy-enforcer-config.paths[1].path=/protected/*
# This is a special path definition where a pattern is used to map different resources in Keycloak.
# With this configuration is possible to enforce access for resources based on a type.
keycloak.policy-enforcer-config.paths[2].name=User Resource
keycloak.policy-enforcer-config.paths[2].path=/protected/{user_name}
keycloak.policy-enforcer-config.paths[3].name=Premium Resource
keycloak.policy-enforcer-config.paths[3].path=/protected/premium
keycloak.policy-enforcer-config.paths[4].name=Eric workspace
keycloak.policy-enforcer-config.paths[4].path=/eric

# Turn off the logs
#logging.level.root=OFF
#logging.level.org.springframework.boot=OFF
#spring.main.banner-mode=OFF
