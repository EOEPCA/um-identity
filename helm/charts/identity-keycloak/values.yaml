# Default values for keycloak.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# ---------------------------------------
# Global variables
# ---------------------------------------
nameOverride: ""
namespaceOverride: ""
fullnameOverride: ""
restartPolicy: Always

# ---------------------------------------------
# Variable used in hpa template and deployment
# ---------------------------------------------
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# ---------------------------------------
# Variable used in Deployment template
# ---------------------------------------
deployment:
  replicaCount: 1
  # Additional Pod annotations
  podAnnotations: {}
  # Image pull secrets for the Pod
  imagePullSecrets: []
    # - name: myRegistrKeySecretName  
  # SecurityContext for the entire Pod. Every container running in the Pod will inherit this SecurityContext. This might be relevant when other components of the environment inject additional containers into running Pods (service meshes are the most prominent example for this)
  podSecurityContext:
    fsGroup: 1000
  # SecurityContext for the Keycloak container
  securityContext:
    runAsUser: 1000
    runAsNonRoot: true
  image:
    repository: quay.io/keycloak/keycloak
    pullPolicy: IfNotPresent
  ## Overrides the default args for the Keycloak container
  args: ["start-dev"]
  # Additional environment variables for Keycloak mapped from Secret or ConfigMap
  extraEnvFrom: ""
  # Define which port will be used in the containers
  containerPort: 8080
  # Liveness probe configuration
  livenessProbe: |
    httpGet:
      path: /
      port: http
    initialDelaySeconds: 0
    timeoutSeconds: 5
  # Readiness probe configuration
  readinessProbe: |
    httpGet:
      path: /realms/master
      port: http
    initialDelaySeconds: 30
    timeoutSeconds: 1
  # Startup probe configuration
  startupProbe: |
    httpGet:
      path: /
      port: http
    initialDelaySeconds: 30
    timeoutSeconds: 1
    failureThreshold: 60
    periodSeconds: 5
  # Pod resource requests and limits
  resources: {}
    # requests:
    #   cpu: "500m"
    #   memory: "1024Mi"
    # limits:
    #   cpu: "500m"
    #   memory: "1024Mi"
  # Node labels for Pod assignment
  nodeSelector: {}
  # Pod affinity
  affinity: {}
  # Node taints to tolerate
  tolerations: []

configMap:
  keycloakLogLevel: DEBUG
  wildflyLoglevel: DEBUG
  keycloakAdmin: admin
  kcHostnameStrict: false
  kcProxy: edge
  kcDb: postgres
  kcDbUrl: jdbc:postgresql://identity-postgres/keycloak
  kcDbUsername: keycloak
  kcDbUrlHost: postgres
  kcDbUrlPort: 5432
  kcFeatures: account3,admin-fine-grained-authz,declarative-user-profile,recovery-codes,scripts
secrets:
  keycloakAdminPassword: admin
  kcDbPassword: 123456

# ---------------------------------------
# Variable group used in ingress template
# ---------------------------------------
ingress:
  enabled: true
  className: ""
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: web, websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
    cert-manager.io/cluster-issuer: selfsigned-issuer
  hosts:
    - host: identity.keycloak.local.eoepca.org
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: identity-keycloak-tls-certificate
      hosts:
        - identity.keycloak.local.eoepca.org
# ---------------------------------------
# Variable group used in ingress template
# ---------------------------------------
service:
  type: ClusterIP
  port: 8080

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""