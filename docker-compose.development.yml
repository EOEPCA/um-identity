version: "3.5"
services:
    identity-manager:
        build: https://github.com/EOEPCA/um-identity-manager#develop
        container_name: um-identity-manager
        networks:
            - eoepca_network
        ports:
            - '4200:80'
        volumes:
            - ./identity-manager:/app
            - /app/node_modules
    identity-api:
        build: https://github.com/EOEPCA/um-identity-api#develop
        container_name: um-identity-api
        networks:
            - eoepca_network
        ports:
            - '8080:8081'
        volumes:
            - ./identity-api/config:/app/config
    keycloak:
        image: quay.io/keycloak/keycloak:22.0
        container_name: keycloak
        networks:
            - eoepca_network
        ports:
            - '8080:8080'
        environment:
            - KEYCLOAK_LOGLEVEL=DEBUG
            - WILDFLY_LOGLEVEL=DEBUG
            - KEYCLOAK_ADMIN=admin
            - KEYCLOAK_ADMIN_PASSWORD=admin
            - KC_PROXY=edge
            - KC_HOSTNAME_STRICT=false
            - KC_DB=postgres
            - KC_DB_URL_HOST=postgres
            - KC_DB_PASSWORD=123456
            - KC_DB_USERNAME=keycloak
            - KC_DB_URL_PORT=5432
        command: "start"
    postgres:
        image: postgres:16.0
        container_name: postgres
        networks:
            - eoepca_network
        ports:
            - '5432:5432'
        volumes:
            - ./postgres/data:/var/lib/postgresql/data
        environment:
            - POSTGRES_DB=keycloak
            - POSTGRES_USER=keycloak
            - POSTGRES_PASSWORD=123456
            - PGPASSWORD=123
            - PGDATA=/var/lib/postgresql/data/keycloak
    gatekeeper:
        image: quay.io/gogatekeeper/gatekeeper:2.6.0
        container_name: gatekeeper
        ports:
            - '3000:3000'
        restart: on-failure
        volumes:
            - ./conf/gatekeeper/:/gatekeeper/:ro
        environment:
            - PROXY_CONFIG_FILE=/gatekeeper/config.yml
        #depends_on:
        #    keycloak:
        #        condition: service_healthy
networks:
    eoepca_network:
        driver: bridge
        name: eoepcanetwork